services:
  # Redis Cache (Keep this)
  redis:
    image: redis:7-alpine
    container_name: template-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - template-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'AUTH', 'redis123']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: backend-template-db
    restart: unless-stopped
    ports:
      - '5000:5000'
    env_file:
      - .env
    environment:
      - DISABLE_REDIS=false
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - template_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - template-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: template-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - template-network

volumes:
  redis_data:
    driver: local
  template_logs:
    driver: local

networks:
  template-network:
    driver: bridge